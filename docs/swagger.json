{
  "info": {
    "title": "Apr-2021",
    "version": "0.0.1"
  },
  "swagger": "2.0",
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getAllUsers",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "default": 10,
            "type": "number",
            "required": false,
            "description": "How many users will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "All users info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "User MongoID",
                    "example": "3456789"
                  },
                  "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "Vova"
                  },
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "vova@example.com"
                  },
                  "login": {
                    "description": "User login",
                    "type": "string",
                    "example": "Vova"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "description": "Create user",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User name"
          },
          {
            "name": "surname",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User surname"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John@gmail.com",
            "description": "User email"
          },
          {
            "name": "login",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John",
            "description": "User login"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "default": "456789"
                },
                "name": {
                  "description": "User name",
                  "type": "string",
                  "example": "Vova"
                },
                "email": {
                  "description": "User email",
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "login": {
                  "description": "User login",
                  "type": "string",
                  "example": "John"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "/users/user_id"
        ],
        "description": "get single user",
        "operationId": "getSingleUser",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "accessToken"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "ID of user to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User find",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "default": "456789"
                },
                "name": {
                  "description": "User name",
                  "type": "string",
                  "example": "John"
                },
                "email": {
                  "description": "User email",
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "login": {
                  "description": "User login",
                  "type": "string",
                  "example": "John"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "/users/user_id"
        ],
        "description": "Update user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "ID of user to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "access_token"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User name"
          },
          {
            "name": "surname",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User surname"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John@gmail.com",
            "description": "User email"
          },
          {
            "name": "login",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User login"
          }
        ],
        "responses": {
          "200": {
            "description": "User update",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "default": "456789"
                },
                "name": {
                  "description": "User name",
                  "type": "string",
                  "example": "John"
                },
                "email": {
                  "description": "User email",
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "login": {
                  "description": "User login",
                  "type": "string",
                  "example": "John"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/users/user_id"
        ],
        "description": "Delete user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "ID of user to update"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "access_token"
          }
        ],
        "responses": {
          "204": {
            "description": "User delete",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "default": "456789"
                },
                "name": {
                  "description": "User name",
                  "type": "string",
                  "example": "John"
                },
                "email": {
                  "description": "User email",
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "login": {
                  "description": "User login",
                  "type": "string",
                  "example": "John"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/users/admin": {
      "post": {
        "tags": [
          "/users/admin"
        ],
        "description": "Create admin",
        "operationId": "createAdmin",
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User name"
          },
          {
            "name": "surname",
            "in": "formData",
            "type": "string",
            "required": false,
            "default": "John",
            "description": "User surname"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John@gmail.com",
            "description": "User email"
          },
          {
            "name": "login",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John",
            "description": "User login"
          },
          {
            "name": "role",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "admin",
            "description": "User role"
          }
        ],
        "responses": {
          "200": {
            "description": "User was created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "default": "456789"
                },
                "name": {
                  "description": "User name",
                  "type": "string",
                  "example": "Vova"
                },
                "email": {
                  "description": "User email",
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "login": {
                  "description": "User login",
                  "type": "string",
                  "example": "John"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/authorization": {
      "post": {
        "tags": ["/authorization"],
        "description": "Login user",
        "operationId": "LoginUser",
        "parameters": [
          {
            "name": "login",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John",
            "description": "user login"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "**********",
            "description": "User password"
          }
        ],
        "responses": {
          "200": {
            "description": "Hello"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "tags": ["/password/reset"],
        "description": "Forgot password",
        "operationId": "forgotPass",
        "parameters": [
          {
            "name": "login",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "John",
            "description": "user login"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/change": {
      "patch": {
        "tags": ["/change"],
        "description": "change password when forgot",
        "operationId": "updatePass",
        "parameters": [
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "**********",
            "description": "User new password"
          },
          {
            "name": "confirmPass",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "**********",
            "description": "confirm new password"
          }
        ],
        "responses": {
          "200": {
            "description": "Hello"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/password/change": {
      "patch": {
        "tags": ["/password/change"],
        "description": "user want to change password",
        "operationId": "updatePass",
        "parameters": [
          {
            "name": "accessToken",
            "in": "header",
            "type": "string",
            "required": true,
            "default": "12567hjvb56789",
            "description": "accessToken"
          },
          {
            "name": "oldPassword",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "**********",
            "description": "old password"
          },
          {
            "name": "newPassword",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "**********",
            "description": "new password"
          }
        ],
        "responses": {
          "200": {
            "description": "Hello"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/cars": {
      "get": {
        "tags": [
          "cars"
        ],
        "operationId": "getAllCars",
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "default": 10,
            "type": "number",
            "required": false,
            "description": "How many cars will be returned"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "Cars MongoID",
                    "example": "3456789"
                  },
                  "car": {
                    "description": "Car name",
                    "type": "string",
                    "example": "BMW"
                  },
                  "model": {
                    "description": "Model car",
                    "type": "string",
                    "example": "5"
                  },
                  "price": {
                    "description": "Price car",
                    "type": "number",
                    "example": "5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "post": {
        "tags": [
          "cars"
        ],
        "description": "Create car",
        "operationId": "createCar",
        "parameters": [
          {
            "name": "Car",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "Lexus",
            "description": "car"
          },
          {
            "name": "Model",
            "in": "formData",
            "type": "string",
            "required": true,
            "default": "350",
            "description": "Model Car"
          },
          {
            "name": "Price",
            "in": "formData",
            "type": "number",
            "required": true,
            "default": "65000",
            "description": "Price car"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "Cars MongoID",
                    "example": "3456789"
                  },
                  "car": {
                    "description": "Car name",
                    "type": "string",
                    "example": "BMW"
                  },
                  "model": {
                    "description": "Model car",
                    "type": "string",
                    "example": "5"
                  },
                  "price": {
                    "description": "Price car",
                    "type": "number",
                    "example": "5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    },
    "/cars/{car_id}": {
      "get": {
        "tags": [
          "/cars/car_id"
        ],
        "description": "get single car",
        "operationId": "getSingleCar",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "access_token"
          },
          {
            "name": "car_id",
            "in": "query",
            "description": "ID of car to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "Cars MongoID",
                    "example": "3456789"
                  },
                  "car": {
                    "description": "Car name",
                    "type": "string",
                    "example": "BMW"
                  },
                  "model": {
                    "description": "Model car",
                    "type": "string",
                    "example": "5"
                  },
                  "price": {
                    "description": "Price car",
                    "type": "number",
                    "example": "5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "/cars/car_id"
        ],
        "description": "update car",
        "operationId": "updateCar",
        "parameters": [
          {
            "name": "car_id",
            "in": "query",
            "description": "ID of car to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "Price",
            "in": "formData",
            "type": "number",
            "required": false,
            "default": "65000",
            "description": "Price car"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "Cars MongoID",
                    "example": "3456789"
                  },
                  "car": {
                    "description": "Car name",
                    "type": "string",
                    "example": "BMW"
                  },
                  "model": {
                    "description": "Model car",
                    "type": "string",
                    "example": "5"
                  },
                  "price": {
                    "description": "Price car",
                    "type": "number",
                    "example": "5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/cars/car_id"
        ],
        "description": "Delete car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "car_id",
            "in": "query",
            "description": "ID of car to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All cars info arr",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "_id": {
                    "description": "Cars MongoID",
                    "example": "3456789"
                  },
                  "car": {
                    "description": "Car name",
                    "type": "string",
                    "example": "BMW"
                  },
                  "model": {
                    "description": "Model car",
                    "type": "string",
                    "example": "5"
                  },
                  "price": {
                    "description": "Price car",
                    "type": "number",
                    "example": "5"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/errorSchema"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errorSchema": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message",
          "example": "bad request"
        },
        "code": {
          "description": "custome code",
          "example": 400,
          "type": "number"
        }
      }
    }
  }
}